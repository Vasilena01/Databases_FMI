--use pc;

-- Pregovor
-- 8. (zad1 week5)
--SELECT DISTINCT PRODUCT.MAKER, PC.PRICE
--FROM PC INNER JOIN PRODUCT
--ON PC.MODEL = PRODUCT.MODEL
--WHERE PC.PRICE = (SELECT MAX(PRICE)
--				FROM PC);

-- 9.(ZAD1 WEEK5)
--SELECT SPEED, AVG(PRICE) AS AVG_PRICE
--FROM PC
--GROUP BY SPEED
--HAVING SPEED > 800;

-- 10.(ZAD1 WEEK5)
--SELECT P1.MAKER, AVG(HD) AS AVG_HD
--FROM PC INNER JOIN PRODUCT AS P1
--ON PC.MODEL = P1.MODEL
--GROUP BY P1.MAKER
--HAVING P1.MAKER IN (SELECT MAKER 
--					FROM PRODUCT INNER JOIN PRINTER
--					ON PRODUCT.MODEL = PRINTER.MODEL);

-- 4. (Zad2 week5)
--SELECT CLASSES.CLASS, MIN(LAUNCHED) AS FIRST_YEAR, MAX(LAUNCHED) AS LAST_YEAR
--FROM CLASSES INNER JOIN SHIPS
--ON CLASSES.CLASS = SHIPS.CLASS
--GROUP BY CLASSES.CLASS;

-- 6. (Zad2 week5)
--SELECT C1.CLASS, COUNT(SHIP) AS SUNK_COUNT
--FROM OUTCOMES INNER JOIN SHIPS
--ON SHIP = NAME
--INNER JOIN CLASSES AS C1
--ON C1.CLASS = SHIPS.CLASS
--GROUP BY C1.CLASS, RESULT
--HAVING RESULT = 'SUNK' AND C1.CLASS IN 
--				(SELECT C2.CLASS
--				FROM CLASSES AS C2 INNER JOIN SHIPS
--				ON C2.CLASS = SHIPS.CLASS
--				GROUP BY C2.CLASS
--				HAVING COUNT(NAME) > 2);

-- 7. (Zad2 week5)
--SELECT COUNTRY, AVG(BORE) AS AVG_BORE
--FROM CLASSES INNER JOIN SHIPS
--ON CLASSES.CLASS = SHIPS.CLASS
--GROUP BY COUNTRY;

-- 6. (Zad1 week6)
--SELECT TOP 1 NAME
--FROM MOVIESTAR
--WHERE GENDER = 'M'
--ORDER BY BIRTHDATE DESC;

-- 7. (ZAD1 WEEK6)
--SELECT DISTINCT STARNAME, STUDIONAME
--FROM STARSIN INNER JOIN MOVIE AS M1
--ON TITLE = MOVIETITLE
--WHERE STARNAME IN (SELECT TOP 1 STARNAME
--					FROM STARSIN INNER JOIN MOVIE
--					ON TITLE = MOVIETITLE
--					WHERE M1.STUDIONAME = STUDIONAME
--					GROUP BY STARNAME, STUDIONAME
--					ORDER BY (COUNT(STARNAME)) DESC);

-- 8. (ZAD2 WEEK6)
--SELECT SHIP
--FROM OUTCOMES AS O1 INNER JOIN BATTLES AS B1
--ON BATTLE = NAME
--GROUP BY SHIP, RESULT, BATTLE, B1.DATE
--HAVING RESULT = 'DAMAGED' AND B1.DATE < (SELECT DATE
--											FROM OUTCOMES AS O2 INNER JOIN BATTLES AS B2
--											ON BATTLE = NAME
--											WHERE O1.SHIP = O2.SHIP
--											GROUP BY O2.SHIP, O2.RESULT, B2.DATE
--											HAVING RESULT = 'OK')
--							AND COUNT(O1.SHIP) <= (SELECT COUNT(SHIP)
--												FROM OUTCOMES AS O3 INNER JOIN BATTLES AS B3
--												ON BATTLE = NAME
--												WHERE O1.SHIP = O3.SHIP
--												GROUP BY O3.SHIP, O3.RESULT
--												HAVING RESULT = 'OK');

-- 8. (ZAD2 WEEK 6 - SECOND VERSION)
--SELECT SHIP
--FROM OUTCOMES AS O1 INNER JOIN BATTLES AS B1
--ON BATTLE = NAME
--GROUP BY SHIP, RESULT, BATTLE, B1.DATE
--HAVING RESULT = 'DAMAGED' AND B1.DATE < (SELECT DATE
--											FROM OUTCOMES AS O2 INNER JOIN BATTLES AS B2
--											ON BATTLE = NAME
--											WHERE O1.SHIP = O2.SHIP AND RESULT = 'OK')
--							AND COUNT(O1.SHIP) <= (SELECT COUNT(SHIP)
--												FROM OUTCOMES AS O3 INNER JOIN BATTLES AS B3
--												ON BATTLE = NAME
--												WHERE O1.SHIP = O3.SHIP AND RESULT = 'OK');

-- 7. (ZAD2 WEEK6)
--SELECT COUNT(SHIP) AS SHIPS_COUNT
--FROM OUTCOMES AS O INNER JOIN BATTLES AS B
--ON SHIP = NAME
--GROUP BY O.SHIP, O.RESULT, B.DATE
--HAVING O.RESULT = 'DAMAGED' AND B.DATE < ALL(SELECT DATE
--											FROM OUTCOMES INNER JOIN BATTLES
--											ON SHIP = NAME
--											WHERE O.SHIP = SHIP AND RESULT = 'OK');